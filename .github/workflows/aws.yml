name: CI/CD Pipeline

on:
  push:
    branches:
      - server-dev
  pull_request:
    branches:
      - server-prod

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .env file
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/server-dev" ]]; then
          echo -e "BACKEND_SERVICE=${{ secrets.BACKEND_SERVICE_DEV }}\nCOMPOSE_PROJECT_NAME=${{ secrets.COMPOSE_PROJECT_NAME }}" > .env
        elif [[ "${{ github.ref }}" == "refs/heads/server-prod" ]]; then
          echo -e "BACKEND_SERVICE=${{ secrets.BACKEND_SERVICE_PROD }}\nCOMPOSE_PROJECT_NAME=${{ secrets.COMPOSE_PROJECT_NAME }}" > .env
        fi

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    # Backend
    - name: Install backend dependencies
      run: npm install
      working-directory: ./app/backend

    - name: Run backend tests
      run: npm test
      working-directory: ./app/backend

    # Frontend
    - name: Install frontend dependencies
      run: npm install
      working-directory: ./app/frontend

    - name: Install Playwright browsers
      run: npx playwright install
      working-directory: ./app/frontend

    - name: Run frontend tests
      run: npm test
      working-directory: ./app/frontend

    - name: Install Docker and Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
        curl -fsSL https://get.docker.com -o get-docker.sh
        sudo sh get-docker.sh
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        sudo systemctl enable --now docker

    - name: Build Docker image
      run: docker-compose build

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add servers to known_hosts
      run: |
        ssh-keyscan -H 54.242.123.128 >> ~/.ssh/known_hosts || echo "Failed to add server-dev to known_hosts"
        ssh-keyscan -H 34.224.214.23 >> ~/.ssh/known_hosts || echo "Failed to add server-prod to known_hosts"

    - name: Deploy to EC2
      run: |
        SERVER_IP=""
        BRANCH_DIR=""
        
        if [[ "${{ github.ref }}" == "refs/heads/server-dev" ]]; then
          SERVER_IP="54.242.123.128"
          BRANCH_DIR="server-dev"
        elif [[ "${{ github.ref }}" == "refs/heads/server-prod" ]]; then
          SERVER_IP="34.224.214.23"
          BRANCH_DIR="server-prod"
        fi

        if [ -z "$SERVER_IP" ]; then
          echo "Invalid branch or missing server configuration"
          exit 1
        fi

        scp .env ubuntu@$SERVER_IP:/home/ubuntu/$BRANCH_DIR/.env
        ssh -o StrictHostKeyChecking=no ubuntu@$SERVER_IP << EOF
          sudo usermod -aG docker \$USER
          sudo chmod 666 /var/run/docker.sock

          if ! [ -x "$(command -v docker-compose)" ]; then
            curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          mkdir -p /home/ubuntu/$BRANCH_DIR
          if [ ! -d /home/ubuntu/$BRANCH_DIR/.git ]; then
            git clone https://github.com/VictorCortez358/DevOps /home/ubuntu/$BRANCH_DIR
          else
            cd /home/ubuntu/$BRANCH_DIR && git pull origin $BRANCH_DIR
          fi

          cd /home/ubuntu/$BRANCH_DIR
          docker-compose down
          docker-compose up -d --build
        EOF
