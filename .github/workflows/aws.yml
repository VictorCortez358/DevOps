name: CI/CD Pipeline

on:
  push:
    branches:
      - server-dev
  pull_request:
    branches:
      - server-prod

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .env
      run: |
        echo -e "PRODUCTS_SERVICE=${{ secrets.PRODUCTS_SERVICE }}\nCOMPOSE_PROJECT_NAME=${{ secrets.COMPOSE_PROJECT_NAME }}" > .env

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Install Docker and Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
        curl -fsSL https://get.docker.com -o get-docker.sh
        sudo sh get-docker.sh
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        sudo systemctl enable --now docker

    - name: Build Docker image
      run: docker-compose build

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to EC2 (server-dev)
      if: github.ref == 'refs/heads/server-dev'
      run: |
        scp .env ubuntu@54.92.132.30:/home/ubuntu/server-dev/.env
        ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@54.92.132.30 << 'EOF'
          # Asegúrate de que Docker y Docker Compose estén instalados
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          sudo systemctl enable --now docker

          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          
          # Clonar o actualizar el repositorio
          mkdir -p /home/ubuntu/server-dev
          git clone https://github.com/VictorCortez358/DevOps /home/ubuntu/server-dev || (cd /home/ubuntu/server-dev && git pull origin server-dev)

          # Levantar contenedores
          cd /home/ubuntu/server-dev
          docker-compose down
          docker-compose up -d
        EOF

    - name: Deploy to EC2 (server-prod)
      if: github.ref == 'refs/heads/server-prod'
      run: |
        scp .env ubuntu@3.89.132.144:/home/ubuntu/server-prod/.env
        ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@3.89.132.144 << 'EOF'
          # Asegúrate de que Docker y Docker Compose estén instalados
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          sudo systemctl enable --now docker

          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          
          # Clonar o actualizar el repositorio
          mkdir -p /home/ubuntu/server-prod
          git clone https://github.com/VictorCortez358/DevOps /home/ubuntu/server-prod || (cd /home/ubuntu/server-prod && git pull origin server-prod)

          # Levantar contenedores
          cd /home/ubuntu/server-prod
          docker-compose down
          docker-compose up -d
        EOF
